//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.1
//     from Assets/Combat/Inputs/Inputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Inputs: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Inputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Inputs"",
    ""maps"": [
        {
            ""name"": ""Unit"",
            ""id"": ""4bc514aa-f67e-4e01-a435-f21241b2e76c"",
            ""actions"": [
                {
                    ""name"": ""MousePerform"",
                    ""type"": ""Button"",
                    ""id"": ""ffa47c62-3966-4cba-bbf1-76200a3288dd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseSelect"",
                    ""type"": ""Button"",
                    ""id"": ""5b99efa2-a232-40b4-9473-8d140ee67ecf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HoverMovement"",
                    ""type"": ""Value"",
                    ""id"": ""14706cb8-e6eb-4f8a-8aca-2db7e47e451f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseMove"",
                    ""type"": ""Button"",
                    ""id"": ""05508b44-aeeb-45ef-8296-8973c35ca27c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Abilty_1"",
                    ""type"": ""Button"",
                    ""id"": ""b1d90855-42f1-40a7-8657-dd4508de4a2e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Abilty_2"",
                    ""type"": ""Button"",
                    ""id"": ""4be9a6f3-6522-4ea1-bc6e-4803a52c34fc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Abilty_3"",
                    ""type"": ""Button"",
                    ""id"": ""b8c602f0-7fb6-4551-9e1a-51779960441d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Abilty_4"",
                    ""type"": ""Button"",
                    ""id"": ""6d4bb3f1-eba6-4cb9-b874-0c10229e02fa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Abilty_5"",
                    ""type"": ""Button"",
                    ""id"": ""5aaa4fd8-ba1a-439b-a5d7-e2723b0dfdec"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Abilty_6"",
                    ""type"": ""Button"",
                    ""id"": ""2d27c24f-4a69-4c5e-b530-769d6b50a5a6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""918098f9-3859-4aea-9810-90cda86c152f"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePerform"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9fdde303-4531-48a5-9637-1228fb4ebc9b"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HoverMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6d9e8aa2-1e71-455d-8548-86bc87238c48"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e9ee0894-c278-460b-a648-c5f78be4436e"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Abilty_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""74a5b71b-20f3-4026-998b-1365d701860c"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Abilty_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""71bfba15-8e61-49f4-8acb-2a11038528b9"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Abilty_3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1aa7d8c3-8f66-4412-8bcd-fd06f1bc07f8"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Abilty_4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""40f98af6-58c2-4028-9acd-5aa9d9686fdf"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Abilty_5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e5cb7fa-1d5f-4046-801c-e60a764e2aa4"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Abilty_6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""CameraMovement"",
            ""id"": ""61c634a6-84fc-4193-b75e-e2b8b139aaab"",
            ""actions"": [
                {
                    ""name"": ""movements"",
                    ""type"": ""Value"",
                    ""id"": ""96125a38-5cc5-48df-9eca-39e393b7db1f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""activation"",
                    ""type"": ""PassThrough"",
                    ""id"": ""6821a7ec-23e0-4141-825a-16fee024639a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""fcf635e4-680a-4748-bdf9-e194e9bd0625"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Zoom"",
                    ""type"": ""Value"",
                    ""id"": ""9013e313-04ac-41f7-80c0-92ea3e54c76b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""fa92ddd6-8421-4fd5-bed5-2ff443499692"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""activation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba2d6980-0d88-436b-88c0-dcc5d74faf6b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""activation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2c151a0a-5c01-45c3-8594-5756b6c4a116"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""activation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7073c764-6547-460f-a93f-4a026b318050"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""activation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""127d95d9-db1d-4cb6-90ec-e6948e5c9603"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""activation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""320b1b5d-2ff3-4cd1-9198-e6c30804e319"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""activation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1c17c20e-d80b-433b-80f6-285a0627d879"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""activation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""73c8666f-2b31-4e26-b80c-7a3aa1b75454"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""activation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""2053a78d-bf88-482e-a2e7-22459a4775b7"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""movements"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e8bde262-079f-4af8-a2a3-afdf827237eb"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""movements"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""21a0bfca-55d7-4d8a-85a7-500702129b85"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""movements"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4d38abb1-23ff-48c6-883b-e8afb22c9325"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""movements"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""82b957fa-34b4-415f-a68c-13401651a86e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""movements"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""285ec91c-bb04-46bc-954b-4d873fed8f51"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""716ba93a-9ad8-4964-b870-5cd771833d41"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1e84bc67-9c5b-4176-a7d6-d3647c45cbb8"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""2cc45337-e44e-4c9b-ad23-53f67a108df0"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""0be290dc-a9b6-4ed8-b7be-4dcfb25e2043"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""88e55c6d-00a3-4603-bb43-89916fd7c69e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""b65eb5fb-c325-4e84-a0e6-54a46251a589"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""9f74f91e-db0c-4bb7-965a-eee1155f9833"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Turn"",
            ""id"": ""38d716dd-c3dd-4278-aec3-7f83d523e860"",
            ""actions"": [
                {
                    ""name"": ""End"",
                    ""type"": ""Button"",
                    ""id"": ""690de31b-8be3-45b3-8075-759e5ca90dad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""3bf7553a-62d1-4be7-a17f-811b2ef5d388"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""End"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""General"",
            ""id"": ""093f6cf4-7c15-4b6b-a47f-d3a6cc926267"",
            ""actions"": [
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""4c043a3e-8373-4535-acb7-bc132c2eb292"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""9d5ffd72-70a1-445e-8cee-f5fb55fdf155"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Party"",
            ""id"": ""23ff7fa2-7247-47e4-96e4-5723b2ed137e"",
            ""actions"": [
                {
                    ""name"": ""Select_1"",
                    ""type"": ""Button"",
                    ""id"": ""a3fb4fa6-fdf7-4879-9262-b58146765760"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select_2"",
                    ""type"": ""Button"",
                    ""id"": ""481c8a1f-a927-425a-8db4-bac333867b32"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select_3"",
                    ""type"": ""Button"",
                    ""id"": ""4c26fea0-82ec-48c2-b89d-104e656ce105"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select_4"",
                    ""type"": ""Button"",
                    ""id"": ""8a6a88e0-681b-45d1-871a-de91c1d0031c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select_Next"",
                    ""type"": ""Button"",
                    ""id"": ""0cf9f391-dec9-4488-aee2-6917bc83a26c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select_Previous"",
                    ""type"": ""Button"",
                    ""id"": ""5d75e596-ec66-413c-9ed2-7d7fffc41129"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0ce066be-ed10-4874-872b-5c9768a6514f"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""efb81fef-4215-444e-ab5c-6a1318c1ef9a"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""06212d09-b956-43c3-9e88-eb4e16eea495"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select_3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""58fb653d-e487-44ec-957e-2514c5bc1ae1"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select_4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5057f9d1-2f4d-44e6-9f10-ccf937f01e37"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select_Next"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bacda1ac-bbf8-4342-b234-ac9e1647542e"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select_Next"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dffcbe8e-330a-46dd-9dd3-afc666352504"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select_Previous"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Unit
        m_Unit = asset.FindActionMap("Unit", throwIfNotFound: true);
        m_Unit_MousePerform = m_Unit.FindAction("MousePerform", throwIfNotFound: true);
        m_Unit_MouseSelect = m_Unit.FindAction("MouseSelect", throwIfNotFound: true);
        m_Unit_HoverMovement = m_Unit.FindAction("HoverMovement", throwIfNotFound: true);
        m_Unit_MouseMove = m_Unit.FindAction("MouseMove", throwIfNotFound: true);
        m_Unit_Abilty_1 = m_Unit.FindAction("Abilty_1", throwIfNotFound: true);
        m_Unit_Abilty_2 = m_Unit.FindAction("Abilty_2", throwIfNotFound: true);
        m_Unit_Abilty_3 = m_Unit.FindAction("Abilty_3", throwIfNotFound: true);
        m_Unit_Abilty_4 = m_Unit.FindAction("Abilty_4", throwIfNotFound: true);
        m_Unit_Abilty_5 = m_Unit.FindAction("Abilty_5", throwIfNotFound: true);
        m_Unit_Abilty_6 = m_Unit.FindAction("Abilty_6", throwIfNotFound: true);
        // CameraMovement
        m_CameraMovement = asset.FindActionMap("CameraMovement", throwIfNotFound: true);
        m_CameraMovement_movements = m_CameraMovement.FindAction("movements", throwIfNotFound: true);
        m_CameraMovement_activation = m_CameraMovement.FindAction("activation", throwIfNotFound: true);
        m_CameraMovement_Rotation = m_CameraMovement.FindAction("Rotation", throwIfNotFound: true);
        m_CameraMovement_Zoom = m_CameraMovement.FindAction("Zoom", throwIfNotFound: true);
        // Turn
        m_Turn = asset.FindActionMap("Turn", throwIfNotFound: true);
        m_Turn_End = m_Turn.FindAction("End", throwIfNotFound: true);
        // General
        m_General = asset.FindActionMap("General", throwIfNotFound: true);
        m_General_Pause = m_General.FindAction("Pause", throwIfNotFound: true);
        // Party
        m_Party = asset.FindActionMap("Party", throwIfNotFound: true);
        m_Party_Select_1 = m_Party.FindAction("Select_1", throwIfNotFound: true);
        m_Party_Select_2 = m_Party.FindAction("Select_2", throwIfNotFound: true);
        m_Party_Select_3 = m_Party.FindAction("Select_3", throwIfNotFound: true);
        m_Party_Select_4 = m_Party.FindAction("Select_4", throwIfNotFound: true);
        m_Party_Select_Next = m_Party.FindAction("Select_Next", throwIfNotFound: true);
        m_Party_Select_Previous = m_Party.FindAction("Select_Previous", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Unit
    private readonly InputActionMap m_Unit;
    private List<IUnitActions> m_UnitActionsCallbackInterfaces = new List<IUnitActions>();
    private readonly InputAction m_Unit_MousePerform;
    private readonly InputAction m_Unit_MouseSelect;
    private readonly InputAction m_Unit_HoverMovement;
    private readonly InputAction m_Unit_MouseMove;
    private readonly InputAction m_Unit_Abilty_1;
    private readonly InputAction m_Unit_Abilty_2;
    private readonly InputAction m_Unit_Abilty_3;
    private readonly InputAction m_Unit_Abilty_4;
    private readonly InputAction m_Unit_Abilty_5;
    private readonly InputAction m_Unit_Abilty_6;
    public struct UnitActions
    {
        private @Inputs m_Wrapper;
        public UnitActions(@Inputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @MousePerform => m_Wrapper.m_Unit_MousePerform;
        public InputAction @MouseSelect => m_Wrapper.m_Unit_MouseSelect;
        public InputAction @HoverMovement => m_Wrapper.m_Unit_HoverMovement;
        public InputAction @MouseMove => m_Wrapper.m_Unit_MouseMove;
        public InputAction @Abilty_1 => m_Wrapper.m_Unit_Abilty_1;
        public InputAction @Abilty_2 => m_Wrapper.m_Unit_Abilty_2;
        public InputAction @Abilty_3 => m_Wrapper.m_Unit_Abilty_3;
        public InputAction @Abilty_4 => m_Wrapper.m_Unit_Abilty_4;
        public InputAction @Abilty_5 => m_Wrapper.m_Unit_Abilty_5;
        public InputAction @Abilty_6 => m_Wrapper.m_Unit_Abilty_6;
        public InputActionMap Get() { return m_Wrapper.m_Unit; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UnitActions set) { return set.Get(); }
        public void AddCallbacks(IUnitActions instance)
        {
            if (instance == null || m_Wrapper.m_UnitActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UnitActionsCallbackInterfaces.Add(instance);
            @MousePerform.started += instance.OnMousePerform;
            @MousePerform.performed += instance.OnMousePerform;
            @MousePerform.canceled += instance.OnMousePerform;
            @MouseSelect.started += instance.OnMouseSelect;
            @MouseSelect.performed += instance.OnMouseSelect;
            @MouseSelect.canceled += instance.OnMouseSelect;
            @HoverMovement.started += instance.OnHoverMovement;
            @HoverMovement.performed += instance.OnHoverMovement;
            @HoverMovement.canceled += instance.OnHoverMovement;
            @MouseMove.started += instance.OnMouseMove;
            @MouseMove.performed += instance.OnMouseMove;
            @MouseMove.canceled += instance.OnMouseMove;
            @Abilty_1.started += instance.OnAbilty_1;
            @Abilty_1.performed += instance.OnAbilty_1;
            @Abilty_1.canceled += instance.OnAbilty_1;
            @Abilty_2.started += instance.OnAbilty_2;
            @Abilty_2.performed += instance.OnAbilty_2;
            @Abilty_2.canceled += instance.OnAbilty_2;
            @Abilty_3.started += instance.OnAbilty_3;
            @Abilty_3.performed += instance.OnAbilty_3;
            @Abilty_3.canceled += instance.OnAbilty_3;
            @Abilty_4.started += instance.OnAbilty_4;
            @Abilty_4.performed += instance.OnAbilty_4;
            @Abilty_4.canceled += instance.OnAbilty_4;
            @Abilty_5.started += instance.OnAbilty_5;
            @Abilty_5.performed += instance.OnAbilty_5;
            @Abilty_5.canceled += instance.OnAbilty_5;
            @Abilty_6.started += instance.OnAbilty_6;
            @Abilty_6.performed += instance.OnAbilty_6;
            @Abilty_6.canceled += instance.OnAbilty_6;
        }

        private void UnregisterCallbacks(IUnitActions instance)
        {
            @MousePerform.started -= instance.OnMousePerform;
            @MousePerform.performed -= instance.OnMousePerform;
            @MousePerform.canceled -= instance.OnMousePerform;
            @MouseSelect.started -= instance.OnMouseSelect;
            @MouseSelect.performed -= instance.OnMouseSelect;
            @MouseSelect.canceled -= instance.OnMouseSelect;
            @HoverMovement.started -= instance.OnHoverMovement;
            @HoverMovement.performed -= instance.OnHoverMovement;
            @HoverMovement.canceled -= instance.OnHoverMovement;
            @MouseMove.started -= instance.OnMouseMove;
            @MouseMove.performed -= instance.OnMouseMove;
            @MouseMove.canceled -= instance.OnMouseMove;
            @Abilty_1.started -= instance.OnAbilty_1;
            @Abilty_1.performed -= instance.OnAbilty_1;
            @Abilty_1.canceled -= instance.OnAbilty_1;
            @Abilty_2.started -= instance.OnAbilty_2;
            @Abilty_2.performed -= instance.OnAbilty_2;
            @Abilty_2.canceled -= instance.OnAbilty_2;
            @Abilty_3.started -= instance.OnAbilty_3;
            @Abilty_3.performed -= instance.OnAbilty_3;
            @Abilty_3.canceled -= instance.OnAbilty_3;
            @Abilty_4.started -= instance.OnAbilty_4;
            @Abilty_4.performed -= instance.OnAbilty_4;
            @Abilty_4.canceled -= instance.OnAbilty_4;
            @Abilty_5.started -= instance.OnAbilty_5;
            @Abilty_5.performed -= instance.OnAbilty_5;
            @Abilty_5.canceled -= instance.OnAbilty_5;
            @Abilty_6.started -= instance.OnAbilty_6;
            @Abilty_6.performed -= instance.OnAbilty_6;
            @Abilty_6.canceled -= instance.OnAbilty_6;
        }

        public void RemoveCallbacks(IUnitActions instance)
        {
            if (m_Wrapper.m_UnitActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUnitActions instance)
        {
            foreach (var item in m_Wrapper.m_UnitActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UnitActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UnitActions @Unit => new UnitActions(this);

    // CameraMovement
    private readonly InputActionMap m_CameraMovement;
    private List<ICameraMovementActions> m_CameraMovementActionsCallbackInterfaces = new List<ICameraMovementActions>();
    private readonly InputAction m_CameraMovement_movements;
    private readonly InputAction m_CameraMovement_activation;
    private readonly InputAction m_CameraMovement_Rotation;
    private readonly InputAction m_CameraMovement_Zoom;
    public struct CameraMovementActions
    {
        private @Inputs m_Wrapper;
        public CameraMovementActions(@Inputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @movements => m_Wrapper.m_CameraMovement_movements;
        public InputAction @activation => m_Wrapper.m_CameraMovement_activation;
        public InputAction @Rotation => m_Wrapper.m_CameraMovement_Rotation;
        public InputAction @Zoom => m_Wrapper.m_CameraMovement_Zoom;
        public InputActionMap Get() { return m_Wrapper.m_CameraMovement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CameraMovementActions set) { return set.Get(); }
        public void AddCallbacks(ICameraMovementActions instance)
        {
            if (instance == null || m_Wrapper.m_CameraMovementActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CameraMovementActionsCallbackInterfaces.Add(instance);
            @movements.started += instance.OnMovements;
            @movements.performed += instance.OnMovements;
            @movements.canceled += instance.OnMovements;
            @activation.started += instance.OnActivation;
            @activation.performed += instance.OnActivation;
            @activation.canceled += instance.OnActivation;
            @Rotation.started += instance.OnRotation;
            @Rotation.performed += instance.OnRotation;
            @Rotation.canceled += instance.OnRotation;
            @Zoom.started += instance.OnZoom;
            @Zoom.performed += instance.OnZoom;
            @Zoom.canceled += instance.OnZoom;
        }

        private void UnregisterCallbacks(ICameraMovementActions instance)
        {
            @movements.started -= instance.OnMovements;
            @movements.performed -= instance.OnMovements;
            @movements.canceled -= instance.OnMovements;
            @activation.started -= instance.OnActivation;
            @activation.performed -= instance.OnActivation;
            @activation.canceled -= instance.OnActivation;
            @Rotation.started -= instance.OnRotation;
            @Rotation.performed -= instance.OnRotation;
            @Rotation.canceled -= instance.OnRotation;
            @Zoom.started -= instance.OnZoom;
            @Zoom.performed -= instance.OnZoom;
            @Zoom.canceled -= instance.OnZoom;
        }

        public void RemoveCallbacks(ICameraMovementActions instance)
        {
            if (m_Wrapper.m_CameraMovementActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICameraMovementActions instance)
        {
            foreach (var item in m_Wrapper.m_CameraMovementActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CameraMovementActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CameraMovementActions @CameraMovement => new CameraMovementActions(this);

    // Turn
    private readonly InputActionMap m_Turn;
    private List<ITurnActions> m_TurnActionsCallbackInterfaces = new List<ITurnActions>();
    private readonly InputAction m_Turn_End;
    public struct TurnActions
    {
        private @Inputs m_Wrapper;
        public TurnActions(@Inputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @End => m_Wrapper.m_Turn_End;
        public InputActionMap Get() { return m_Wrapper.m_Turn; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TurnActions set) { return set.Get(); }
        public void AddCallbacks(ITurnActions instance)
        {
            if (instance == null || m_Wrapper.m_TurnActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_TurnActionsCallbackInterfaces.Add(instance);
            @End.started += instance.OnEnd;
            @End.performed += instance.OnEnd;
            @End.canceled += instance.OnEnd;
        }

        private void UnregisterCallbacks(ITurnActions instance)
        {
            @End.started -= instance.OnEnd;
            @End.performed -= instance.OnEnd;
            @End.canceled -= instance.OnEnd;
        }

        public void RemoveCallbacks(ITurnActions instance)
        {
            if (m_Wrapper.m_TurnActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ITurnActions instance)
        {
            foreach (var item in m_Wrapper.m_TurnActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_TurnActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public TurnActions @Turn => new TurnActions(this);

    // General
    private readonly InputActionMap m_General;
    private List<IGeneralActions> m_GeneralActionsCallbackInterfaces = new List<IGeneralActions>();
    private readonly InputAction m_General_Pause;
    public struct GeneralActions
    {
        private @Inputs m_Wrapper;
        public GeneralActions(@Inputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Pause => m_Wrapper.m_General_Pause;
        public InputActionMap Get() { return m_Wrapper.m_General; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GeneralActions set) { return set.Get(); }
        public void AddCallbacks(IGeneralActions instance)
        {
            if (instance == null || m_Wrapper.m_GeneralActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GeneralActionsCallbackInterfaces.Add(instance);
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
        }

        private void UnregisterCallbacks(IGeneralActions instance)
        {
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
        }

        public void RemoveCallbacks(IGeneralActions instance)
        {
            if (m_Wrapper.m_GeneralActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGeneralActions instance)
        {
            foreach (var item in m_Wrapper.m_GeneralActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GeneralActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GeneralActions @General => new GeneralActions(this);

    // Party
    private readonly InputActionMap m_Party;
    private List<IPartyActions> m_PartyActionsCallbackInterfaces = new List<IPartyActions>();
    private readonly InputAction m_Party_Select_1;
    private readonly InputAction m_Party_Select_2;
    private readonly InputAction m_Party_Select_3;
    private readonly InputAction m_Party_Select_4;
    private readonly InputAction m_Party_Select_Next;
    private readonly InputAction m_Party_Select_Previous;
    public struct PartyActions
    {
        private @Inputs m_Wrapper;
        public PartyActions(@Inputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Select_1 => m_Wrapper.m_Party_Select_1;
        public InputAction @Select_2 => m_Wrapper.m_Party_Select_2;
        public InputAction @Select_3 => m_Wrapper.m_Party_Select_3;
        public InputAction @Select_4 => m_Wrapper.m_Party_Select_4;
        public InputAction @Select_Next => m_Wrapper.m_Party_Select_Next;
        public InputAction @Select_Previous => m_Wrapper.m_Party_Select_Previous;
        public InputActionMap Get() { return m_Wrapper.m_Party; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PartyActions set) { return set.Get(); }
        public void AddCallbacks(IPartyActions instance)
        {
            if (instance == null || m_Wrapper.m_PartyActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PartyActionsCallbackInterfaces.Add(instance);
            @Select_1.started += instance.OnSelect_1;
            @Select_1.performed += instance.OnSelect_1;
            @Select_1.canceled += instance.OnSelect_1;
            @Select_2.started += instance.OnSelect_2;
            @Select_2.performed += instance.OnSelect_2;
            @Select_2.canceled += instance.OnSelect_2;
            @Select_3.started += instance.OnSelect_3;
            @Select_3.performed += instance.OnSelect_3;
            @Select_3.canceled += instance.OnSelect_3;
            @Select_4.started += instance.OnSelect_4;
            @Select_4.performed += instance.OnSelect_4;
            @Select_4.canceled += instance.OnSelect_4;
            @Select_Next.started += instance.OnSelect_Next;
            @Select_Next.performed += instance.OnSelect_Next;
            @Select_Next.canceled += instance.OnSelect_Next;
            @Select_Previous.started += instance.OnSelect_Previous;
            @Select_Previous.performed += instance.OnSelect_Previous;
            @Select_Previous.canceled += instance.OnSelect_Previous;
        }

        private void UnregisterCallbacks(IPartyActions instance)
        {
            @Select_1.started -= instance.OnSelect_1;
            @Select_1.performed -= instance.OnSelect_1;
            @Select_1.canceled -= instance.OnSelect_1;
            @Select_2.started -= instance.OnSelect_2;
            @Select_2.performed -= instance.OnSelect_2;
            @Select_2.canceled -= instance.OnSelect_2;
            @Select_3.started -= instance.OnSelect_3;
            @Select_3.performed -= instance.OnSelect_3;
            @Select_3.canceled -= instance.OnSelect_3;
            @Select_4.started -= instance.OnSelect_4;
            @Select_4.performed -= instance.OnSelect_4;
            @Select_4.canceled -= instance.OnSelect_4;
            @Select_Next.started -= instance.OnSelect_Next;
            @Select_Next.performed -= instance.OnSelect_Next;
            @Select_Next.canceled -= instance.OnSelect_Next;
            @Select_Previous.started -= instance.OnSelect_Previous;
            @Select_Previous.performed -= instance.OnSelect_Previous;
            @Select_Previous.canceled -= instance.OnSelect_Previous;
        }

        public void RemoveCallbacks(IPartyActions instance)
        {
            if (m_Wrapper.m_PartyActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPartyActions instance)
        {
            foreach (var item in m_Wrapper.m_PartyActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PartyActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PartyActions @Party => new PartyActions(this);
    public interface IUnitActions
    {
        void OnMousePerform(InputAction.CallbackContext context);
        void OnMouseSelect(InputAction.CallbackContext context);
        void OnHoverMovement(InputAction.CallbackContext context);
        void OnMouseMove(InputAction.CallbackContext context);
        void OnAbilty_1(InputAction.CallbackContext context);
        void OnAbilty_2(InputAction.CallbackContext context);
        void OnAbilty_3(InputAction.CallbackContext context);
        void OnAbilty_4(InputAction.CallbackContext context);
        void OnAbilty_5(InputAction.CallbackContext context);
        void OnAbilty_6(InputAction.CallbackContext context);
    }
    public interface ICameraMovementActions
    {
        void OnMovements(InputAction.CallbackContext context);
        void OnActivation(InputAction.CallbackContext context);
        void OnRotation(InputAction.CallbackContext context);
        void OnZoom(InputAction.CallbackContext context);
    }
    public interface ITurnActions
    {
        void OnEnd(InputAction.CallbackContext context);
    }
    public interface IGeneralActions
    {
        void OnPause(InputAction.CallbackContext context);
    }
    public interface IPartyActions
    {
        void OnSelect_1(InputAction.CallbackContext context);
        void OnSelect_2(InputAction.CallbackContext context);
        void OnSelect_3(InputAction.CallbackContext context);
        void OnSelect_4(InputAction.CallbackContext context);
        void OnSelect_Next(InputAction.CallbackContext context);
        void OnSelect_Previous(InputAction.CallbackContext context);
    }
}
